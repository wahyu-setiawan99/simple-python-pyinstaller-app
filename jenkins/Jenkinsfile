node {
    stage('Build') {
        docker.image('python:2-alpine').inside {
            sh 'python -m py_compile sources/add2vals.py sources/calc.py'
            stash(name: 'compiled-results', includes: 'sources/*.py*')
        }
    }

    stage('Test') {
        docker.image('qnib/pytest').inside {
            try {
                sh 'py.test --junit-xml test-reports/results.xml sources/test_calc.py'
            } catch (Exception e) {
                echo 'Error: ' + e.toString()
            } finally {
                junit 'test-reports/results.xml'
            }
        }
    }

    stage('Deliver') {
        def VOLUME = "${env.WORKSPACE}/sources:/src"
        def IMAGE = 'cdrx/pyinstaller-linux:python2'

        try {
            dir("${env.BUILD_ID}") {
                unstash(name: 'compiled-results')
                sh "docker run --rm -v ${VOLUME} ${IMAGE} 'pyinstaller -F add2vals.py'"
            }
        } catch (Exception e) {
            echo 'Error: ' + e.toString()
        } finally {
            try {
                archiveArtifacts "sources/dist/add2vals"
            } catch (Exception e) {
                echo 'Error archiving artifacts: ' + e.toString()
            }
            sh "docker run --rm -v ${VOLUME} ${IMAGE} 'rm -rf build dist'"
        }
    }

}