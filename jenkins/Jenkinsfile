pipeline {
    agent none
    options {
        skipStagesAfterUnstable()
    }
    stages {
        stage('Build') {
            agent {
                docker {
                    image 'python:3-alpine'
                }
            }
            steps {
                sh 'python -m py_compile sources/add2vals.py sources/calc.py'
                stash(name: 'compiled-results', includes: 'sources/*.py*')
            }
        }
        stage('Test') {
            agent {
                docker {
                    image 'qnib/pytest'
                }
            }
            steps {
                sh 'py.test --junit-xml test-reports/results.xml sources/test_calc.py'
            }
            post {
                always {
                    junit 'test-reports/results.xml'
                }
            }
        }
        stage('Deploy') { 
            agent any
            environment { 
                VOLUME = '$(pwd)/sources:/src'
                IMAGE = 'python:3.8-alpine'
            }
            steps {
                dir(path: env.BUILD_ID) { 
                    unstash(name: 'compiled-results')
                    sh "cp ${env.WORKSPACE}/requirements.txt requirements.txt"
                    sh "cat requirements.txt"
                    sh "docker run --rm -v ${VOLUME} ${IMAGE} /bin/sh -c 'pip install -r requirements.txt && python add2vals.py'"
                    sleep(60)
                }
            }
        }

    }
}